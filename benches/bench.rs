#![feature(test)]

extern crate test;

use std::fmt;
use std::io::Write;
use test::{black_box, Bencher};

struct HexBufferFormat<const N: usize>(&'static [u8; N]);
impl<const N: usize> fmt::Display for HexBufferFormat<N> {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        let mut buffer = const_hex::Buffer::<N>::new();
        f.write_str(buffer.format(self.0))
    }
}

struct StdFormat<const N: usize>(&'static [u8; N]);
impl<const N: usize> fmt::Display for StdFormat<N> {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        for &byte in self.0 {
            write!(f, "{byte:02x}")?;
        }
        Ok(())
    }
}

macro_rules! benches {
    ($($name:ident($enc:expr, $dec:expr))*) => {
        mod decode {
            use super::*;

            mod const_hex {
                use super::*;

                $(
                    #[bench]
                    fn $name(b: &mut Bencher) {
                        let buf = &mut [0; $dec.len() / 2];

                        b.iter(|| {
                            let res = ::const_hex::decode_to_slice(black_box($dec), black_box(buf));
                            black_box(res.unwrap());
                        });
                    }
                )*
            }

            mod hex {
                use super::*;

                $(
                    #[bench]
                    fn $name(b: &mut Bencher) {
                        let buf = &mut [0; $dec.len() / 2];

                        b.iter(|| {
                            let res = ::hex::decode_to_slice(black_box($dec), black_box(buf));
                            black_box(res.unwrap());
                        });
                    }
                )*
            }
        }

        mod encode {
            use super::*;

            mod const_hex {
                use super::*;

                $(
                    #[bench]
                    fn $name(b: &mut Bencher) {
                        let buf = &mut [0; $enc.len() * 2];

                        b.iter(|| {
                            let res = ::const_hex::encode_to_slice(black_box($enc), black_box(buf));
                            black_box(res.unwrap());
                        });
                    }
                )*
            }

            mod hex {
                use super::*;

                $(
                    #[bench]
                    fn $name(b: &mut Bencher) {
                        let buf = &mut [0; $enc.len() * 2];

                        b.iter(|| {
                            let res = ::hex::encode_to_slice(black_box($enc), black_box(buf));
                            black_box(res.unwrap());
                        });
                    }
                )*
            }
        }

        mod format {
            use super::*;

            mod const_hex {
                use super::*;

                $(
                    #[bench]
                    fn $name(b: &mut Bencher) {
                        let mut buf = Vec::with_capacity($enc.len() * 2);

                        b.iter(|| {
                            buf.clear();
                            write!(&mut buf, "{}", HexBufferFormat(black_box($enc))).unwrap();
                            black_box(&buf);
                        });
                    }
                )*
            }

            mod std {
                use super::*;

                $(
                    #[bench]
                    fn $name(b: &mut Bencher) {
                        let mut buf = Vec::with_capacity($enc.len() * 2);

                        b.iter(|| {
                            buf.clear();
                            write!(&mut buf, "{}", StdFormat(black_box($enc))).unwrap();
                            black_box(&buf);
                        });
                    }
                )*
            }
        }
    }
}

benches! {
    bench1_32(bytes::ENC_32, bytes::DEC_32)
    bench2_128(bytes::ENC_128, bytes::DEC_128)
    bench3_4096(bytes::ENC_4096, bytes::DEC_4096)
}

#[rustfmt::skip]
mod bytes {
    use hex_literal::hex;

    pub const ENC_32:   &[u8; 32]   = &hex!("c6ddb328c7e0eb6ce7204daa79b0ae25f632272b8d4c5726c2cbe64cf890cbfa");
    pub const ENC_128:  &[u8; 128]  = &hex!("c1c19d4a28434a8b65272ecf74c4eb0ad8a5106639d54cf417f7423bfecde55e83fef26659ff12f3bd9f19196d6e5f84a4f8a95a3bf3dee61886e25be1ead60864d8722c04288521b153d1bae477a49e000932c83e336830d41d86fb825bfc63e983e54e007532f1c4cd40c7cf346d0f736e03fd20fc65eaabce46f2fe29d550");
    pub const ENC_4096: &[u8; 4096] = &hex!("");

    pub const DEC_32:   &str = "17fcf46621eb6d2aefa3edb5cfe90e2f";
    pub const DEC_128:  &str = "fa5943385153d8d7383f5514d5af03a811ef6c50e143362f42604e6cee015694fef5b57457c48e2120b706960f1aa8ca8b2b689367e383060403f2c75322bf92";
    pub const DEC_4096: &str = "50fe36085e0358265f268b8a346dcf1ad21af411014847ee7acdbb514d481547ced9588d7340340f53ed238e81ed95d7222f31b5240716714ed14ad242a339ba384ac55abe04a2a7fe29dad466d6295abe8a2721ae631daaf8c252d3018583087b0dc04b751e8674cb3327ded952dbe4de5efda1a024612ad39d5c2cbb42c4dbc14a60253d198574348f2c9cd86fbb85dfd47f2a065645d0e5fb50465573676aa51b4c9f3fefbee1c26914692423529ffcd12cb005c9cf11e2d4d8531a80643cc9a7f750af11e382c3b91a20ff6fa115d90fd2fb6f9c02e1589abb6f58d128b58f46292879dd9d3464d1bc54f3fff4a51662f8dca64fc6c93f5e7c6093a4a4bbf7e6b663ee4b8dce74bcde64071372b6464e485f5b84d078b64ba01735b00fe3ea777494c95d04934b9cef30c08c5f1b4d22df4fd4395089c8056dc0cec9600d4647a6aa738065d2466e23a616e5d0dae28ea8635ebf992a6dda3452a11ba96744737a1f1f663f4c3fcca70206fd461a005da15702b69520af0e7a0f2e259b6ac7165fd31eeb18750c8fce982bbb2bd80adaffdea327cc59c2557f9ebb0c833bfffc5d0fec32b927f42d859d338c83451667d7c090c5bd40cf60ccf11c2ecde16ae7e64755826a8dfa9ca074e1e4951357cc2c881736a37ff2b429cea6601e85e5129dbd1a889e68fac59293ac3a200f455f78f3323577750c7dfee9b5de34401ec67bb0274caf72e192fc6bbd8802d5737d2f9d80b8c9a0b1f284ffcc3e0806dcd4bf2943f2e60e15afe12247f2952d46e40e3597f3bd252696c906e29ddbcefe14893bb6959e5a7e7b0e74c53cfd1480d0201a99f44b55c561434216dfb4e1541850258d102f71ee768e57a49f55a6de94df9dd3f712a17daa61b5cc2bb8daf50968168ff374b9923f9d668046a974b0d21b316e217256c744e1b5fdb245a885d7d1eddd4c892fca11d48cf2353d3ca6111faa52eefea861c4be4e348ed33a3694f8039a27679e2d2d279e79ec8d755b5543768c96325883f12ecedf32e078fb1ea016ffdf92fec58d41a81d458f8eee0848f11b0ab94cf61a220c8916b5ecbd23e8a2a8f8ebe5218ec7d66a0a9ec9bab6b00cc86f3930fab52e54454f97df355870592c3ae074281e0b81ec103aea2b879aa4f61ab606c8fe5f21c841b1d3eb67b72f7589023c537a9027c12f50f83d827f45693338ad233347cf2f6fb90180fadf0f718186615cdefe044a777bf454c9f025bf26726acdab1fadc6112ca9f10db89381bb0c75d38e5960897cf2e71093fb5d86341362fdbb51c2f9608c067118983d3064266b65593142b0f545e47f441658fac423d1d9474713f581f1e6f033a3c8ce4dbdc5d25d5435117d8ede16073c068aa1bd019bcec8b1952750fcdeaf797a07932025704a5f42a796ad6e578b5dbf1ad1e6be02bd6a3683c077e27cdb2da4e5ed3caefbd08b1539d96a4ae77246e134300becdfc9a7c970a9aafa585a2e1a934fec89e2b17620b23aa581ef9b7096bfde51e227db23b97541333f219e634fe869705236cba9db31038ddaa5a632fd43f4457f620f4eb8c2d24dfa694515dd287105465ba9fc0e09d51730cc5c7c55dc3863673ebf0dd8b4b90e9d5b60b5ea9513b1f9f6383f128a6b5dc84e548cffe981e878c28e9501bcf653ab0b114728307e1e9ae50a7b0e91df1140da66adb31283bb91b211b9fcbd42bd34d211e2fdb897320fa0a5c6b15937562387fca383d7da966e8f94117e0c1eff6f5e51702b3ea2913f2029d0190407807a5b23bd0b3da1c2c64a4df740b58ada9d394d08a51455ead6f826a3bffe9250c2df2ce659d02844d6e521ff5d754550a7f704ce6995a0a96aad536b7e0e43568d441406d2e2b9feeece6182be111a12d7b64247b09a8837af4695bcb7cec85606f3c400ce2c6dc1d9e6429c0ca9ed8d40886da060ecea75a83efff2794ac01565778ab4cf076915f597524522f3c45f6ea0db4c83f364fd44062b52a51ac70743bd071dbdec3a63482951d07ffcb5ef8b83aacbfe5cbda2f7f241bcf0acc0804a3d5e9e65836e2bf1986ae13dbb361954ec0a36733ee659136767b779451df5684e90adff55440960b9a6602df4c6084e011c976c25d33cccab6763f230e1df8e5b0c41c6a1dbadca5f88785c931f8d9a1283f2690f6dfef5d20fcca2edd3c599d1f64cdbe815bc7e12ae700db9c928ad401b6aeb2a2ddccd1e921513e2950cd35a220ff64d201e9b52416c2a4b6881e8563cdb94dbf132786303d6d1f0a9f04d4e56c12201e45f6371f94431c7bb3111ece2154834b5640270eefb688f3751c4b98564fd71ba3c07806afe6dfe6e64e1c26cc7c1a8b437a829ac690a6f13603d622e6f3241e5592852ba7b1b544a3429d972e1470e449f1e7337cf3a672991b1c59b804164f2de4074608e69f53e6c6db01715e5f642c93c253a8545e8b70946443e60a934a2867d9ffc6ef0885a7c4756368f0dff8184e12c87a369a0d03e341e69ceac9555585df7b3a402ac06ed934678b0d882f1bb210feeaa6641503a9f76db8e25dcccc732161a010453ede57890bc1ef45b182c1423bdb18a186cb630d8c620d570a6638fd9c21764c2f0a1b5c2778cbd7d66e4f86c3b858659dbd67ec74d5ceaf9c4054cf21c419093647fb6636000d5ea0aa55d99a96f7d633a240db356c68fdbbeca90fc83f80d187e60f577c96d71c1eb951fed1e7f656927252e864cc2e736b711d033cd41ed8fb308a88564c9b7b34cc9d187a9a9e865573fb771a77df554037ca376bcce948b63aa1d38ab076bc0bf582ce8a42218d1fb3389f6d803b6c0623fce8a91f86146a6eb62023f21f22f4615d8f9daf7de826258122d84d92504973fbde421d0ca41fbc488";
}
