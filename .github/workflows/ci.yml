name: CI

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Test +${{ matrix.rust }} ${{ matrix.target.triple }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - triple: aarch64-unknown-linux-gnu
            feature: +neon
          - triple: i686-unknown-linux-gnu
            feature: +avx2
          - triple: x86_64-unknown-linux-gnu
            feature: +avx2
          - triple: wasm32-wasip1
            feature: +simd128
        rust: [nightly, stable, 1.64]
        exclude:
          - target:
              triple: wasm32-wasip1
              feature: +simd128
            rust: 1.64
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target.triple }}
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target.triple }}

      - name: Enable type layout randomization
        run: echo RUSTFLAGS=${RUSTFLAGS}\ -Zrandomize-layout >> $GITHUB_ENV
        if: matrix.rust == 'nightly'

      - name: Enable target feature
        run: echo RUSTFLAGS=${RUSTFLAGS}\ -Ctarget-feature=${{ matrix.target.feature }} >> $GITHUB_ENV

      - uses: Swatinem/rust-cache@v2

      - run: cargo build
      - run: cargo build --no-default-features
      - run: cargo test
      - run: cargo test --no-default-features
      - run: cargo test --no-default-features --features force-generic
      - run: cargo test --no-default-features --features nightly,portable-simd
        if: matrix.rust == 'nightly'
      - run: cargo bench --no-run
        if: matrix.rust == 'nightly'

  miri:
    name: Miri
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
        flags: ["", -Fforce-generic]
    env:
      MIRIFLAGS: -Zmiri-strict-provenance
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@miri
        with:
          target: ${{ matrix.target }}
      - run: cargo miri test --target ${{ matrix.target }} ${{ matrix.flags }}

  fuzz:
    name: Fuzz
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: dtolnay/install@cargo-fuzz
      - uses: Swatinem/rust-cache@v2
      - run: cargo fuzz check

  feature-checks:
    name: feature checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
      - name: cargo hack
        run: cargo hack check --feature-powerset --depth 2 --all-targets

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets

  docs:
    name: docs
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-docs
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --workspace --all-features --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "--cfg docsrs -D warnings"

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all --check

  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/install@cargo-outdated
      - run: cargo outdated --workspace --exit-code 1
